{ pkgs, lib, config, ... }:

{
  imports = [
    #./services.nix
  ];
  sops.secrets.traefik = {
    format = "yaml";
    sopsFile = ../../secrets/traefik.yaml;

    KID = { };
    HMAC = { };
    CLOUDFLARE_DNS_API_TOKEN = { };
  };
  services.traefik = {
    enable = true;
    staticConfigOptions = {
      experimental.http3 = true;
      entryPoints = {
        http = {
          address = ":80";
          http.redirections.entryPoint = {
            to = "https";
            scheme = "https";
            permanent = false;
          };
        };
        https = {
          address = ":443";
          http.tls.certResolver = "le";
          http3 = { };
        };
      };
      certificatesResolvers.le.acme = {
        caServer = "https://acme.zerossl.com/v2/DV90";
        email = "blackhole@dora.im";
        storage = config.services.traefik.dataDir + "/acme.json";
        keyType = "EC256";
        dnsChallenge = { provider = "cloudflare"; };
        eab = {
          kid = config.sops.secrets.traefik.KID.path;
          hmacEncoded = config.sops.secrets.traefik.HMAC.path;
        };
      };
      ping = { manualRouting = true; };
      api = { dashboard = true; };
    };
    dynamicConfigOptions = {
      tls.options.default = {
        minVersion = "VersionTLS13";
        sniStrict = true;
      };
      http = {
        routers = {
          ping = {
            rule = "Host(`${config.networking.fqdn}`) && Path(`/`)";
            entryPoints = [ "https" ];
            service = "ping@internal";
          };
          traefik = {
            rule = "Host(`${config.networking.fqdn}`) && Path(`/traefik`)";
            entryPoints = [ "https" ];
            service = "api@internal";
          };
        };
      };
    };
  };
  systemd.services.traefik.serviceConfig.EnvironmentFile =
    config.sops.secrets.traefik.CLOUDFLARE_DNS_API_TOKEN.path;
}
